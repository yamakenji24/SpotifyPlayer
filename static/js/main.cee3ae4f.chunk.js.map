{"version":3,"sources":["constants/server-constants.ts","ui/auth/AuthLayout.tsx","ui/auth/AuthContainer.tsx","ui/auth/AuthCallbackContainer.tsx","ui/music/components/Artists.tsx","ui/music/components/Albums.tsx","ui/music/components/Tracks.tsx","ui/music/hooks/useAudio.ts","ui/music/hooks/useSearch.ts","ui/music/hooks/useSearchArtist.ts","ui/music/hooks/useSearchAlbum.ts","ui/music/hooks/useSearchTrack.ts","ui/music/MusicLayout.tsx","ui/music/MusicContainer.tsx","index.tsx"],"names":["clientId","process","b64Auth","btoa","AuthLayout","Title","Button","onClick","window","location","href","styled","h1","button","AuthContainer","AuthCallbackContainer","useState","toHome","setToHome","toSearch","setToSearch","getAuthCode","code","match","Promise","resolve","reject","Error","getToken","authCode","a","handleErrors","response","ok","statusText","fetch","method","headers","Authorization","body","then","json","catch","err","useEffect","data","sessionStorage","setItem","access_token","refresh_token","fetchToken","to","Artists","artists","id","map","artist","key","className","alt","name","src","undefined","image","url","Albums","albums","album","AudioPlayer","playUrl","Audio","audio","_forceUpdate","forceUpdate","prevState","addEventListener","removeEventListener","paused","useAudio","playing","pause","play","Tracks","tracks","track","idx","useSearch","searchInput","setSearchInput","history","useHistory","token","setToken","height","width","setArtists","fetchArtist","axios","get","res","items","item","images","result","fetching","useSearchArtist","setAlbums","fetchAlbum","useSearchAlbum","setTracks","fetchTrack","preview_url","useSearchTrack","checkToken","getItem","removeItem","push","MusicLayout","panel","setPanel","fetchData","handleOnClick","useCallback","e","castToProgressPanel","currentTarget","handleonChange","target","value","autoFocus","placeholder","onChange","switchPanel","MusicContainer","document","ReactDom","render","basename","exact","path","component","getElementById"],"mappings":"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","file":"static/js/main.cee3ae4f.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\nexport const clientId = process.env.REACT_APP_CLIENT_ID;\nexport const clientSecret = process.env.REACT_APP_CLIENT_SECRET;\nexport const redirectUri = process.env.REACT_APP_REDIRECT_URI;\nexport const scopes = process.env.REACT_APP_SCOPES;\nexport const b64Auth = btoa(clientId+\":\"+clientSecret)\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { clientId, redirectUri } from '../../constants/server-constants';\n\nexport const AuthLayout = ():JSX.Element => {\n  const redirectURI = process.env.PUBLIC_URL + '/callback';\n  const handleClick = () => {\n    window.location.href = \n      \"https://accounts.spotify.com/authorize?client_id=\"+clientId+\"&redirect_uri=\"+redirectUri+\"&response_type=code&state=123\" \n  }\n\n  return (\n    <>\n      <Title>\n        Welcome to my TopPage\n      </Title>\n\n      <Button onClick={handleClick}>\n        Login \n      </Button>\n    </>\n  )\n}\n\nconst Title = styled.h1`\n  text-align: center;\n`;\nconst Button = styled.button`\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;","import * as React from 'react';\n\nimport { AuthLayout } from './AuthLayout';\n\nexport const AuthContainer = (): JSX.Element => {\n  \n  return <AuthLayout />\n}","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { redirectUri, b64Auth } from '../../constants/server-constants';\nimport { Redirect } from 'react-router-dom';\n\ninterface SignInApiResponse {\n  access_token: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  token_type: string;\n}\n\nexport const AuthCallbackContainer = () => {\n  const [toHome, setToHome] = useState(false)\n  const [toSearch, setToSearch] = useState(false)\n\n  const getAuthCode = (): Promise<string> => { \n    const url = window.location.href\n    const code = url.match(/(?:code)=([\\S\\s]*?)&/)\n    return code !== null ? Promise.resolve(code[1]) : Promise.reject(new Error('null code'))\n  }\n\n  const getToken = async (authCode: string):Promise<SignInApiResponse> => {\n    const handleErrors = (response:Response):Response => {\n      if(!response.ok) {\n        throw Error(response.statusText)\n      }\n      return response\n    }\n\n    return await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        Authorization: `Basic ${b64Auth}`,\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: `grant_type=authorization_code&code=${authCode}&redirect_uri=${redirectUri}`,\n    })\n    .then(handleErrors)\n    .then<SignInApiResponse>(response => Promise.resolve(response.json()))\n    .catch(err => Promise.reject(new Error(err)))\n  }\n  \n  useEffect(() => {\n    const fetchToken = async () => {\n      try {\n        const code = await getAuthCode()\n        const data = await getToken(code)\n        sessionStorage.setItem('accessToken', data.access_token)\n        sessionStorage.setItem('refreshToken', data.refresh_token)\n        setToSearch(true)\n      } catch(error) {\n        setToHome(true)\n      }\n    }\n    fetchToken()\n  }, [])\n\n  if (toHome) return <Redirect to=\"/\" />\n  if (toSearch) return <Redirect to=\"/search\" />\n\n  return (\n    <>\n      <p>Loading....</p>\n    </>\n  )\n}","import * as React from 'react';\nimport { artistType } from '../../../types/artistType';\nimport './artist.css';\n\ninterface Props {\n  artists: artistType[];\n}\n\nexport const Artists = ({artists}: Props): JSX.Element => {\n  return (\n    <> \n      {\n        artists[0].id !== '' ? artists.map(artist =>\n          <div key={artist.id} className=\"artist\">\n            <img \n              alt={artist.name}\n              src={artist.image === undefined ? undefined : artist.image.url}\n            />\n            <p>{artist.name}</p>\n          </div>\n        )\n        : <><p>Now Loading Artist...</p></>\n      }\n    </>\n  )\n}","import * as React from 'react';\nimport { albumType } from '../../../types/albumType';\nimport './album.css';\n\ninterface Props {\n  albums: albumType[];\n}\n\nexport const Albums = ({albums}: Props): JSX.Element => {\n  return (\n    <>\n      {\n        albums[0].id !== '' ? albums.map(album =>\n          <div key={album.id} className=\"album\">\n            <img \n              alt={album.name}\n              src={album.image === undefined ? undefined : album.image.url}\n            />\n            <h3>{album.name}</h3>\n            <p>By {album.artist}</p>\n          </div>\n        )\n        : <><p>Now Loading Album....</p></>\n      }\n    </>\n  )\n}","import * as React from 'react';\nimport { trackType } from '../../../types/trackType';\nimport { useAudio } from '../hooks/useAudio';\nimport './track.css';\n\ninterface Props {\n  tracks: trackType[];\n}\n\nconst AudioPlayer = (playUrl: string) => {\n  const [playing, audio] = useAudio(playUrl);\n\n  const handleOnClick = () => {\n    playing ? audio.pause() : audio.play()\n  }\n\n  return (\n    <>\n      <button onClick={handleOnClick}>\n        {playing ? \"Pause\" : \"Play\"}\n      </button>\n    </>\n  );\n};\n\nexport const Tracks = ({tracks}: Props): JSX.Element => {\n  return (\n    <>\n      {\n        tracks[0].id !== '' ? tracks.map((track, idx) => \n          <div key={track.id}>\n            <p>{idx + 1}</p>\n            <h4>{track.name}</h4>\n            {track.playUrl ? AudioPlayer(track.playUrl): <p>no MP3 URL</p>}\n          </div>  \n        )\n        : <><p>Now Loading Tracks...</p>\n        </>\n      }\n    </>\n  )\n}","import { useState, useEffect } from 'react';\n\nexport const useAudio = (url: string): [boolean, HTMLAudioElement] => {\n\n  const [audio] = useState(new Audio(url));\n  const [, _forceUpdate] = useState(false);\n  const forceUpdate = () => _forceUpdate(prevState => !prevState);\n\n  \n  useEffect(() => {\n    audio.addEventListener(\"play\", forceUpdate);\n    audio.addEventListener(\"pause\", forceUpdate);\n    audio.addEventListener(\"ended\", forceUpdate);\n\n    return () => {\n      audio.removeEventListener(\"play\", forceUpdate);\n      audio.removeEventListener(\"pause\", forceUpdate);\n      audio.removeEventListener(\"ended\", forceUpdate);\n    };\n  }, []);\n\n  return [!audio.paused, audio];\n};","import React, {useState, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {useSearchArtist} from './useSearchArtist';\nimport {useSearchAlbum} from './useSearchAlbum';\nimport {useSearchTrack} from './useSearchTrack';\n\nimport {artistType} from '../../../types/artistType'\nimport {albumType} from './../../../types/albumType';\nimport {trackType} from '../../../types/trackType';\n\nexport const useSearch = (): [\n  React.Dispatch<React.SetStateAction<string>>,\n  {\n    artists: artistType[],\n    albums: albumType[],\n    tracks: trackType[],\n  }\n] => {\n  const [searchInput, setSearchInput] = useState('')\n  const history = useHistory();\n  const [token, setToken] = useState<string>('')\n  const {artists} = useSearchArtist(token, searchInput)\n  const {albums} = useSearchAlbum(token, searchInput)\n  const {tracks} = useSearchTrack(token, searchInput)\n\n  const getToken = async () => {\n    const checkToken = sessionStorage.getItem('accessToken')!\n    if(!checkToken) {\n      sessionStorage.removeItem('accessToken')\n      history.push('/')\n    }\n    await setToken(checkToken)\n  }\n\n  useEffect(() => {\n    getToken()\n  }, [])\n\n  return [setSearchInput, {artists, albums, tracks}]\n}","import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {artistType, artistsJsonType} from '../../../types/artistType';\n\n\nexport const useSearchArtist = (token:string, searchInput:string):{artists: Array<artistType>} => {\n  const [artists, setArtists] = useState<Array<artistType>>([{\n    id: '',\n    name: '',\n    image: {\n      height: 0,\n      url: '',\n      width: 0\n    }\n  }])\n\n  const fetchArtist = async (): Promise<Array<artistType>> => {\n    return await axios.get<artistsJsonType>(`https://api.spotify.com/v1/search?q=${searchInput}&type=artist`, {\n      headers: {'Authorization' : 'Bearer ' + token}\n    })\n    .then(response => response.data)\n    .then(res => {\n      const data = res.artists.items.map(item => ({\n        id: item.id,\n        name: item.name,\n        image: item.images[1]\n      }))\n\n      return Promise.resolve(data)\n    })\n    .catch(err => Promise.reject(new Error(err)))\n  }\n\n  useEffect(() => {\n    const fetching = async () => {\n      if (searchInput !== '') {\n        const result = await fetchArtist()\n        setArtists(result)\n      }\n    }\n\n    fetching()\n  }, [searchInput])\n\n  return {artists}\n}","import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {albumType, albumsJsonType} from '../../../types/albumType';\n\nexport const useSearchAlbum = (token:string, searchInput:string): {albums: Array<albumType>} => {\n  const [albums, setAlbums] = useState<Array<albumType>>([{\n    id:'',\n    name:'',\n    artist:'',\n    image: {\n      height: 0,\n      url: '',\n      width: 0\n    }\n  }])\n\n  const fetchAlbum = async (): Promise<Array<albumType>> => {\n    return await axios.get<albumsJsonType>(`https://api.spotify.com/v1/search?q=${searchInput}&type=album`, {\n      headers: {'Authorization' : 'Bearer ' + token}\n    })\n    .then(response => response.data)\n    .then(res => {\n      const data = res.albums.items.map(item => ({\n        id: item.id,\n        name: item.name,\n        artist: item.artists[0].name,\n        image: item.images[1]\n      }))\n\n      return Promise.resolve(data)\n    })\n    .catch(err => Promise.reject(new Error(err)))\n  }\n  useEffect(() => {\n    const fetching = async () => {\n      if (searchInput !== '') {\n        const result = await fetchAlbum()\n        setAlbums(result)\n      }\n    }\n\n    fetching()\n  }, [searchInput])\n\n  return {albums}\n}","import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {trackType, tracksJsonType} from '../../../types/trackType';\n\nexport const useSearchTrack = (token:string, searchInput:string):{tracks: Array<trackType>} => {\n  const [tracks, setTracks] = useState<Array<trackType>>([{\n    id: '',\n    name: '',\n    artists: '',\n    playUrl: '',\n  }])\n\n  const fetchTrack = async (): Promise<Array<trackType>> => {\n    return await axios.get<tracksJsonType>(`https://api.spotify.com/v1/search?q=${searchInput}&type=track`, {\n      headers: {'Authorization' : 'Bearer ' + token}\n    })\n    .then(response => response.data)\n    .then<Array<trackType>>(res => {\n      const data = res.tracks.items.map(item => ({\n        id: item.id,\n        name: item.name,\n        artists: item.artists[0].name,\n        playUrl: item.preview_url,\n      }));\n\n      return Promise.resolve(data)\n    })\n    .catch(err => Promise.reject(new Error(err)))\n  }\n\n  useEffect(() => {\n    const fetching = async () => {\n      if (searchInput !== '') {\n        const result = await fetchTrack()\n        setTracks(result)\n      }\n    }\n\n    fetching()\n  }, [searchInput])\n\n  return {tracks}\n}","import * as React from 'react';\nimport { useState, useCallback } from 'react';\nimport { Artists } from './components/Artists';\nimport { Albums } from './components/Albums';\nimport { Tracks } from './components/Tracks';\nimport { useSearch} from './hooks/useSearch';\nimport './musicLayout.css';\n\ntype ProgressPanel = 'ARTIST_PANEL' | 'ALBUM_PANEL' | 'TRACK_PANEL' | 'UNSELECTED';\n\nconst ARTIST_PANEL = 'ARTIST_PANEL';\nconst ALBUM_PANEL = 'ALBUM_PANEL';\nconst TRACK_PANEL = 'TRACK_PANEL';\n\nconst castToProgressPanel = (panel: string): ProgressPanel => {\n  switch(panel) {\n    case ARTIST_PANEL:\n      return ARTIST_PANEL\n    case ALBUM_PANEL:\n      return ALBUM_PANEL\n    case TRACK_PANEL:\n      return TRACK_PANEL\n    default:\n      return 'UNSELECTED'\n  }\n}\n\nexport const MusicLayout = ():JSX.Element => {\n  const [panel, setPanel] = useState<ProgressPanel>(ARTIST_PANEL)\n  const [fetchData, {artists, albums, tracks}] = useSearch()\n\n  const handleOnClick = useCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setPanel(castToProgressPanel(e.currentTarget.name))\n  }, [])\n\n  const handleonChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => { \n    fetchData(e.target.value)\n  }, [])\n\n  const switchPanel = () => {\n    switch(panel) {\n      case ARTIST_PANEL:\n        return <Artists artists={artists}/>\n      case ALBUM_PANEL:\n        return <Albums albums={albums}/>\n      case TRACK_PANEL:\n        return <Tracks tracks={tracks}/>\n      default:\n        return null\n    }\n  }\n\n  return (\n    <>\n      <div className='searchBar-wrapper'>\n        <p>Search for an Artists, Song or Album</p>\n        <input \n         autoFocus\n         placeholder=\"start typing...\"\n         onChange={handleonChange}\n        />\n      </div>\n\n\n      <div className=\"navbar-wrapper\">\n        <button name={ARTIST_PANEL} onClick={handleOnClick}>Artists</button>\n        <button name={ALBUM_PANEL} onClick={handleOnClick}>Albums</button>\n        <button name={TRACK_PANEL} onClick={handleOnClick}>Tracks</button> \n      </div>    \n\n      <div className=\"panel_display\">\n        {switchPanel()}\n      </div>\n\n    </>\n  )\n}","import * as React from 'react';\nimport {MusicLayout} from './MusicLayout';\n\nexport const MusicContainer = (): JSX.Element => {\n  return (\n    <>\n     <MusicLayout />\n    </>\n  )\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport {\n  BrowserRouter as Router, Route, Switch,\n} from 'react-router-dom';\nimport { AuthContainer } from './ui/auth/AuthContainer';\nimport { AuthCallbackContainer } from './ui/auth/AuthCallbackContainer';\nimport { MusicContainer } from './ui/music/MusicContainer';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDom.render(\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path='/' component={AuthContainer} />\n        <Route path='/callback/' component={AuthCallbackContainer}/>\n        <Route path='/search' component={MusicContainer} />\n      </Switch>\n    </Router>,\n    document.getElementById('root')\n  );\n});"],"sourceRoot":""}